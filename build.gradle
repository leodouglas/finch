buildscript {
    ext {
        springBootVersion = '1.3.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE')
    }
}

apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'

jar {
    baseName = 'finch'
    version = '0.0.1-SNAPSHOT'
    manifest {
        attributes('Main-Class': 'br.com.finchsolucoes.lorem.Application')
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

springBoot {
    mainClass = "br.com.finchsolucoes.lorem.Application"
}

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-netflix:1.0.4.RELEASE'
    }
}

dependencies {
    compile 'org.springframework.cloud:spring-cloud-starter-eureka'
    compile 'org.springframework.boot:spring-boot-starter-data-mongodb'
    compile "org.springframework.boot:spring-boot-starter-undertow:1.3.0.RELEASE"

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'com.jayway.restassured:rest-assured:2.7.0'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}
sourceSets {
    main.java.srcDirs += 'src/main/java'
}
